from flask import Flask,render_template,request,flash,session,abort,redirect,url_for
from forms import ContactForm
from flask_mail import Message,Mail
from form2 import LoginForm

app = Flask(__name__,static_folder='static', static_url_path='/static')
app.secret_key='mybibbar2'
mail= Mail()

app.config["MAIL_SERVER"] = "smtp.gmail.com"
app.config["MAIL_PORT"]= 465
app.config["MAIL_USE_SSL"] = True
app.config["MAIL_USERNAME"] = 'enricozlinfo@gmail.com'
app.config["MAIL_PASSWORD"]= '7p48OCURAkVx'
mail.init_app(app)

@app.route('/')
@app.route('/index',methods=['GET','POST'])
def index():
    form = ContactForm()
    if request.method == 'POST':
        if form.validate() == False:
            flash('All fields are required!')
            return render_template('index.html',form=form)
        else:
            msg = Message(form.subject.data,sender='enricozlinfo@gmail.com', recipients=['enrico@enricozl.me'])
            msg.body ="""\n***DO NOT REPLY TO THIS EMAIL***\nThis is an autogenerated email from the website enricozammitlonardelli.com. \nYou have received a new email from %s at %s .\nMessage:\n\n%s\n\nHave a nice day!""" %(form.name.data,form.email.data,form.message.data)
            mail.send(msg)
            return render_template('index.html',success=True,form=form)
    elif request.method == 'GET':
        return render_template('index.html',form=form)

@app.route('/login', methods=['GET','POST'])
def do_admin_login():
    form= LoginForm()
    if request.method == 'GET':
        if not session.get('logged_in'):
            return render_template('login.html',form=form)
        else:
            return render_template('mainpage.html')
    elif request.method == 'POST':
        if form.password.data == 'password' and form.username.data == 'admin':
            session['logged_in'] = True
            return render_template('mainpage.html')
        else:
            flash('wrong password!')
            return render_template('login.html',form=form)

@app.route('/logout')
def logout():
    session['logged_in'] = False
    return redirect(url_for('do_admin_login'))
